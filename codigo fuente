using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Data.Entity;

namespace PersonaDatosAPP
{
    public partial class Form1 : Form
    {
        public Form1()
        {
            InitializeComponent();// Inicializa los componentes del formulario.
        }

        private void label11_Click(object sender, EventArgs e)
        {

        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.CargarDatos();  // Carga los datos desde la base de datos al DataGridView.

            this.Limpiardatos(); // Limpia los campos de texto.

            CenterToScreen();// Centra el formulario en la pantalla.
        }
        public void CargarDatos()
        {
            using (DATOS_PERSONAEntities db = new DATOS_PERSONAEntities())
            {
                dgvPersona.DataSource = db.tbl_persona.ToList();//obtiene lalista de las persona 
            }

        }
        // Método para limpiar los campos del formulario.
        public void Limpiardatos()
        {
            txtNombre.Clear();
            txtApellido.Clear();
            txtCedula.Clear();
            txtMateria1.Clear();
            txtMateria2.Clear();
            txtMateria3.Clear();
            txtMateria4.Clear();
            txtMateria5.Clear();
            txtNota1.Clear();
            txtNota2.Clear();
            txtNota3.Clear();
            txtNota4.Clear();
            txtNota5.Clear();
            txtNombre.Focus();// Coloca el foco en el campo de texto de nombre.

        }
        // Botón para insertar un nuevo registro en la base de datos.
        private void btnInsertar_Click(object sender, EventArgs e)
        {
            try
            {
                using (DATOS_PERSONAEntities db = new DATOS_PERSONAEntities())
                {
                    tbl_persona persona = new tbl_persona();
                    persona.nombre = txtNombre.Text;
                    persona.apellido = txtApellido.Text;
                    persona.cedula = txtCedula.Text;
                    persona.materia1 = txtMateria1.Text;
                    persona.materia2 = txtMateria2.Text;
                    persona.materia3 = txtMateria3.Text;
                    persona.materia4 = txtMateria4.Text;
                    persona.materia5 = txtMateria5.Text;
                    persona.nota1 = Convert.ToInt32(txtNota1.Text);
                    persona.nota2 = Convert.ToInt32(txtNota2.Text);
                    persona.nota3 = Convert.ToInt32(txtNota3.Text);
                    persona.nota4 = Convert.ToInt32(txtNota4.Text);
                    persona.nota5 = Convert.ToInt32(txtNota5.Text);
                    db.tbl_persona.Add(persona);// Agrega la nueva persona.
                    db.SaveChanges();// Guarda los cambios en la base de datos.
                }
                this.CargarDatos();// Recarga los datos actualizados.
                this.Limpiardatos();// Limpia los campos del formulario.
            }
            catch
            {

                MessageBox.Show("Completar todos los campos", "Ingresar correctamente los datos", MessageBoxButtons.OK);
            }
        }


        private void dgvPersona_CellContentClick(object sender, DataGridViewCellEventArgs e)
        {
            txtNombre.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["nombre"].Value);// Llena el campo de texto con el dato seleccionado
        }

        private void Form1_StyleChanged(object sender, EventArgs e)
        {

        }

        private void dgvPersona_SelectionChanged(object sender, EventArgs e)
        {
            // Llena los campos del formulario con los datos de la fila seleccionada.
            txtNombre.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["nombre"].Value);
            txtApellido.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["apellido"].Value);
            txtCedula.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["cedula"].Value);
            txtMateria1.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["materia1"].Value);
            txtMateria2.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["materia2"].Value);
            txtMateria3.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["materia3"].Value);
            txtMateria4.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["materia4"].Value);
            txtMateria5.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["materia5"].Value);
            txtNota1.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["nota1"].Value);
            txtNota2.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["nota2"].Value);
            txtNota3.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["nota3"].Value);
            txtNota4.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["nota4"].Value);
            txtNota5.Text = Convert.ToString(dgvPersona.CurrentRow.Cells["nota5"].Value);
        }

        private void btnModificar_Click(object sender, EventArgs e)
        {
            try
            {

                int id = Convert.ToInt32(dgvPersona.CurrentRow.Cells["id"].Value);// Obtiene el ID de la persona seleccionada.
                using (DATOS_PERSONAEntities db = new DATOS_PERSONAEntities())
                {
                    tbl_persona Persona = new tbl_persona();
                    Persona.id = id;
                    Persona.nombre = txtNombre.Text;
                    Persona.apellido = txtApellido.Text;
                    Persona.cedula = txtCedula.Text;
                    Persona.materia1 = txtMateria1.Text;
                    Persona.materia2 = txtMateria2.Text;
                    Persona.materia3 = txtMateria3.Text;
                    Persona.materia4 = txtMateria4.Text;
                    Persona.materia5 = txtMateria5.Text;
                   
                    Persona.nota1 = Convert.ToInt32(txtNota1.Text);
                    Persona.nota2 = Convert.ToInt32(txtNota2.Text);
                    Persona.nota3 = Convert.ToInt32(txtNota3.Text);
                    Persona.nota4 = Convert.ToInt32(txtNota4.Text);
                    Persona.nota5 = Convert.ToInt32(txtNota5.Text);
                    db.Entry(Persona).State = EntityState.Modified;// Marca el registro como modificado.
                    db.SaveChanges(); // Guarda los cambios en la base de datos.


                }
                this.CargarDatos();// Recarga los datos actualizados.
                this.Limpiardatos(); // Limpia los campos del formulario.
            }
            catch
            {
                MessageBox.Show("Completar todos los campos", "Ingresar correctamente los datos", MessageBoxButtons.OK);
            }


        }

        private void label3_Click(object sender, EventArgs e)
        {

        }

        private void btnEliminar_Click(object sender, EventArgs e)
        {
            int id = Convert.ToInt32(dgvPersona.CurrentRow.Cells["id"].Value);// Obtiene el ID de la persona seleccionada.
            using (DATOS_PERSONAEntities db = new DATOS_PERSONAEntities())
            {
                var lista = db.tbl_persona.Where(x => x.id == id).FirstOrDefault();// Busca la persona por ID.
                db.tbl_persona.Remove(lista); // Elimina el registro.
                db.SaveChanges();// Guarda los cambios.
            }
            this.CargarDatos();// Recarga los datos actualizados.

        }

        private void btnBuscar_Click(object sender, EventArgs e)
        {
            using (DATOS_PERSONAEntities db = new DATOS_PERSONAEntities())
            {
                // Busca personas por nombre y actualiza el DataGridView.
                var buscar = db.tbl_persona.Where(x => x.nombre == txtNombre.Text);
                dgvPersona.DataSource = buscar.ToList();
            }
        }

      

        private void txtMateria1_TextChanged(object sender, EventArgs e)
        {
            if (txtMateria1.TextLength >= 1)
            {

                lblNota1.Text = Convert.ToString(txtMateria1.Text);

            }
            else
            {
                lblNota1.Text = "Nota 1";
            }
        }

  

        private void btnNuevo_Click(object sender, EventArgs e)
        {
            Limpiardatos();
        }

        private void txtMateria2_TextChanged(object sender, EventArgs e)
        {
            if (txtMateria2.TextLength >= 1)
            {

                lblNota2.Text = Convert.ToString(txtMateria2.Text);

            }
            else
            {
                lblNota2.Text = "Nota 2";
            }
        }

        private void txtMateria3_TextChanged(object sender, EventArgs e)
        {
            if (txtMateria3.TextLength >= 1)
            {

                lblNota3.Text = Convert.ToString(txtMateria3.Text);

            }
            else
            {
                lblNota3.Text = "Nota 3";
            }
        }

        private void txtMateria4_TextChanged(object sender, EventArgs e)
        {
            if (txtMateria4.TextLength >= 1)
            {

                lblNota4.Text = Convert.ToString(txtMateria4.Text);

            }
            else
            {
                lblNota4.Text = "Nota 4";
            }
        }

        private void txtMateria5_TextChanged(object sender, EventArgs e)
        {
            if (txtMateria5.TextLength >= 1)
            {

                lblNota5.Text = Convert.ToString(txtMateria5.Text);

            }
            else
            {
                lblNota5.Text = "Nota 5";
            }
        }
    }
}
